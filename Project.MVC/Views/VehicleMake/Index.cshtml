@model Project.Service.PaginatedList<Project.Service.Models.VehicleMake>
@*@model IEnumerable<Project.Service.Models.VehicleMake>*@

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-controller="VehicleMake" asp-action="Index">
    <p>
        @*Name: <input type="text" name="SearchString" />
            <input type="submit" value="Filter" />*@
        Find: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
        <input type="submit" value="Filter" /> |
        <a asp-action="Index">Back to Full List</a>
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @*<a asp-action="Index" asp-route-sortOrder="@ViewData["Name"]">@Html.DisplayNameFor(model => model.Name)</a>*@
                <a asp-action="Index" asp-route-sortOrder="@ViewData["Name"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
            </th>
            @*<th>
            @Html.DisplayNameFor(model => model.Name)
        </th>*@
            <th>
                @*<a asp-action="Index" asp-route-sortOrder="@ViewData["Abrv"]">@Html.DisplayNameFor(model => model.Abrv)</a>*@
                <a asp-action="Index" asp-route-sortOrder="@ViewData["Abrv"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Abrv</a>
            </th>
            @*<th>
            @Html.DisplayNameFor(model => model.Abrv)
        </th>*@
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Abrv)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>